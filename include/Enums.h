/*
Copyright 2022-23 Wolfgang Hermsen

This file is part of the BESYQIT Interpreter.

    The BESYQIT Interpreter is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    The BESYQIT Interpreter is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with the BESYQIT Interpreter.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef ENUMS_H
#define ENUMS_H

// total is used for OPG
enum Level {TOTAL, DEBUG, INFO, WARNALL, WARN, ERROR, FATAL};
// codes for plist/pexpr execution
enum Codes {ROW, VAL, VAR, IDX, AND, OR, NOT, EQ, NEQ, GE, LE, GT, LT, ELVIS,
 PLUS, MINUS, TIMES, DIVIDE, ABS, POWER, MOD, DIV, MIN, MAX, OUT, DROP, SKIPZ, DEFAULT, CONCAT, LEN, END, XISIP, ANSIP,
 SQRT, CEIL, FLOOR, ROUND, SIN, COS, TAN, PI, ARCSIN, ARCCOS, ARCTAN, EXP, LOG, LOG10, SINH, COSH, TANH, ISINT, ISNUM, UPPER, LOWER };
 // modes for plist execution
enum Modes {SINGLE, MULTI};
// note that verbs, refs and vmods are declared in Item
enum StopTypes {LOOP, PARAGRAPH, PROGRAM};
// LogMessages
enum LogMsg {NOMSG, MSG1, MSG2, BARSONLYFORREF, ERRORLEXANLYZEREF, MUSTBEVERB, VERBMODNOTRECOG, REFMODNOTRECOG,
            MODSEQNOTRECOG, MORETHANONEPAR, TRYSETREFNAME, INVALIDREFDIST, DONTREPLACETHIS,NOTENOUGHOPS,
            SENTREFNOTFOUND, TRYSETREF, ERRSECONDPARSE, UNKNOWNOPTION, UNKNOWNFILE, UNKNOWNGROUP, IGNOREUNKNOWNTYPE, MISSINGGROUP,
            MISSINGENDLABEL, SENTENCENAMENOTUNIQUE, ERRTHIRDPARSE, ERRTHIRDPARSE3,PARAGRAPHSNOTFOUND, PARAGRAPHSMORETHANONCE, PARAGRAPHSUNNAMED,
            MALFORMEDCONDSEQ, WRONGREFDISTANCE, WRONGREFDISTANCE0, USERDEFNOG, NAMENOTCOMPLIES, INITNOTCOMPLIES, ENDNOTCOMPLIES, INITENDNOTCOMPLIES,
            PARSEFAIL, CURRENTVERSION, FIRSTPARSEFAIL, PREPROCESSING, WHENPREPROCESSHEAD, WHENPREPROCESSBODY, PARRECOGNIZED, PAREND, NOTANINT, NOTANUMBER,
            NAMEISHEADER, NAMEIS, CURRENTLOGLEVEL, WORKDIR, CURRENTDIR, PARAGRAPHUNNAMED, PARAGRAPHMULTIPLE, OPCODENOTALLOWED,
            COULDNOTEXECUTE, INDEXNOTEXISTS, NOTALLRESULTSUSED, ERRORWHENEXEC, ERRORWHENEXECPLAIN, STANDARDOUTEMPTY, INPUTWAS,
            MODIFIERIGNORED, ERRORBAIKHIL, TUTLENGTHNOTINT, ERROREXECJANET, FILENOTDEL, NOTADIR, DIRNOTDEL, DIRNOTCREATE,
            NOTENOUGHOPSINSEQ, NOBARSEP, FILEMISSING, MUDNOEXEC, COPMISSINGVAL, ERROREXECKHI, NOEXECONFILE, VERBNOTALLOWED,
            EMPTYRESULTIGNORED, ERRINSENTOFPAR, ERREXECSENTENCE, UNKNOWNTYPE, ERRINPREP, ERRWHENPROCESSING, SENTENCEREFNOTFOUND,
            RESULTINVALID, EMPTYENTRIES
            };

enum LogDbg {TIMEINIT, TIMEFOR, TIMEBL, TIMEEL, TIMEBF, TIMEEF, TIMEBS, TIMEES, ENTRY, PARSEVECTOR,
            FIRSTFILELENGTH, HEADERLENGTH, INCLUDENUMBER, HEADERLINECOUNT, FIRSTBODYLINECOUNT, READINGINCLUDEFILE, BODIESLINECOUNT,
            PARAGRAPHFOUND, CLEARSNAMES, CALCJUMPBREAK, CALCJUMP, FILELINECOUNT, PROCESSING, RECOGNIZEDINTDEF, RECOGNIZEDFLOATDEF,
            SYMBOLS, VERBDEFS, PARSERES, PARSESECOND, PARSETHIRD, PARAGRAPHENTER, PARAGRAPHLEAVE, CHANGEDSTOPEXEC, CHANGEDSTOPEXEC2,
            RECOGNIZEDVAL, RECOGNIZEDFLOAT, FINISHEDPERROW, STARTPERROW, REFEVALTO, EXECVERB, CONDITIONIS, CONDITIONRESULT, READFILEIS,
            RESULTSIZE, INDEXHIORLO, INDEXHI, STARTPROCESSING, CANTUSEMESEC, RVIS, SETROWINCR, SETDEFAULT, CHANGEDSTOPEXECMO,
            NOWCONVERTING, FOUNDNEWMIN, ADDEDNEWMIN, FOUND, INSERT, JANXILENGETINDEX, BAIKHILMAX
};
#endif // ENUMS_H
